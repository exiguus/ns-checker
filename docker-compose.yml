services:
  ns-checker:
    build:
      context: .
      dockerfile: Dockerfile
    image: ns-checker:latest
    container_name: ns-checker
    restart: unless-stopped
    ports:
      - "${DNS_LISTENER_PORT:-25353}:${DNS_LISTENER_PORT:-25353}/udp"
      - "${DNS_LISTENER_PORT:-25353}:${DNS_LISTENER_PORT:-25353}/tcp"
      - "${DNS_LISTENER_HEALTH_PORT:-8080}:${DNS_LISTENER_HEALTH_PORT:-8080}/tcp"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${DNS_LISTENER_HEALTH_PORT:-8080}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    cap_add:
      - NET_ADMIN
      - NET_BIND_SERVICE
    # Use host network mode to forward client IP address
    network_mode: host
    environment:
      - DNS_LISTENER_PORT=${DNS_LISTENER_PORT}
      - DNS_LISTENER_HEALTH_PORT=${DNS_LISTENER_HEALTH_PORT}
      - DNS_LISTENER_TCP_ENABLED=${DNS_LISTENER_TCP_ENABLED}
      - DNS_LISTENER_RESPONSE_IP=${DNS_LISTENER_RESPONSE_IP}
      - DNS_LISTENER_RESPONSE_TTL=${DNS_LISTENER_RESPONSE_TTL}
      - DNS_LISTENER_MAX_WORKERS=${DNS_LISTENER_MAX_WORKERS}
      - DNS_LISTENER_RATE_LIMIT=${DNS_LISTENER_RATE_LIMIT}
      - DNS_LISTENER_RATE_BURST=${DNS_LISTENER_RATE_BURST}
      - DNS_LISTENER_CACHE_TTL=${DNS_LISTENER_CACHE_TTL}
      - DNS_LISTENER_CLEANUP_INTERVAL=${DNS_LISTENER_CLEANUP_INTERVAL}
      - DNS_LISTENER_LOGS_DIR=${DNS_LISTENER_LOGS_DIR}
      - DNS_LISTENER_LOG_FILE=${DNS_LISTENER_LOG_FILE}
      - DNS_LISTENER_DEBUG_LEVEL=${DNS_LISTENER_DEBUG_LEVEL}
      - DNS_LISTENER_METRICS_ENABLED=${DNS_LISTENER_METRICS_ENABLED}
    deploy:
      resources:
        limits:
          cpus: '${DOCKER_CPU_LIMIT:-4}'
          memory: ${DOCKER_MEMORY_LIMIT:-2048M}
    volumes:
      - ${DNS_LISTENER_LOGS_DIR:-./logs}:/app/logs
